# Example environment configuration for fast, low-latency runtime
# Copy to .env and adjust secrets/paths as needed.

# -----------------------------
# Core dataset / embedding paths
# -----------------------------
GEOPARQUET_PATH=/home/appuser/postgres-init/govgis_nov2023_slim_spatial_embs.geoparquet
EMBEDDING_MODEL_CACHE_FOLDER=/home/appuser/models
PGVECTOR_DIM=1024

# -----------------------------
# Postgres bootstrap (superuser)
# -----------------------------
POSTGRES_HOST=postgres
POSTGRES_DB=postgres
POSTGRES_USER=postgres
POSTGRES_PASSWORD=postgres
POSTGRES_SCHEMA=public
POSTGRES_TABLE=layers

# -----------------------------
# Read-only application role (auto-created/updated on startup)
# -----------------------------
READ_ONLY_POSTGRES_USER=appuser
READ_ONLY_POSTGRES_USER_PASSWORD=govgis

# -----------------------------
# Vector similarity indexing
# -----------------------------
# Choose ivfflat (fast build, tunable recall) or hnsw (higher recall, slower build)
VECTOR_INDEX_TYPE=ivfflat
# l2 | cosine | ip (inner product) â€“ must match query strategy
VECTOR_METRIC=cosine
# Index name
VECTOR_INDEX_NAME=layer_embedding_index
# ivfflat specific (increase for larger datasets to improve recall; e.g. 1200 for ~1M rows)
VECTOR_IVFFLAT_LISTS=1200
# hnsw specific (ignored unless VECTOR_INDEX_TYPE=hnsw)
VECTOR_HNSW_M=16
VECTOR_HNSW_EF_CONSTRUCTION=64
# ---- Vector index memory autotune (ivfflat only) ----
# Session maintenance_work_mem to request before building index (MB)
VECTOR_MAINTENANCE_WORK_MEM_MB=512
# Upper cap autotune may raise to if Postgres reports higher required memory
VECTOR_MAINTENANCE_WORK_MEM_MAX_MB=2048
# Automatically retry raising maintenance_work_mem / reducing lists when memory errors occur (true|false)
VECTOR_AUTOTUNE_INDEX_MEMORY=true

# -----------------------------
# Connection pooling & performance
# -----------------------------
PG_POOL_EAGER=true
PG_POOL_MAX_SIZE=10
PG_POOL_MIN_SIZE=1
# PG_POOL_WARM_TARGET=5
PG_POOL_TIMEOUT=30
EMBEDDING_WARMUP=true
# Optional: Set ivfflat.probes at query time (higher = better recall, slower; default probes=lists/10)
# IVFFLAT_PROBES=200
# Optional: LRU cache size for embedding generation (reduces latency on repeated queries)
# EMBED_CACHE_SIZE=256

# -----------------------------
# High-volume loader tuning (~1M rows)
# -----------------------------
# Loader method: copy (fast, default with staging), copy_direct (fastest, no staging), or executemany (fallback / debugging)
LOADER_METHOD=copy
# Rows per executemany batch (ignored in copy mode)
INIT_LOADER_BATCH_SIZE=500
# Rows between commits for executemany (ignored in copy mode; 0=single txn)
LOADER_COMMIT_INTERVAL=100000
# Apply session tweaks (synchronous_commit/work_mem/temp_buffers)
LOADER_PERFORMANCE_TWEAKS=true
LOADER_WORK_MEM=128MB
LOADER_TEMP_BUFFERS=32MB
# off for speed, on for durability (applies to chosen loader method)
LOADER_SYNCHRONOUS_COMMIT=off
# When true, skip dimension checking for ~10x faster ingestion (only safe if data is pre-validated)
# ENFORCE_EMBED_DIM=false
# When true, skip vector index creation during data load (useful for iterative dev)
# FAST_DEV_SKIP_INDEX=false

# -----------------------------
# Index / naming
# -----------------------------
SPATIAL_INDEX_NAME=layer_extent_index

# -----------------------------
# Logging
# -----------------------------
LOG_LEVEL=INFO

# -----------------------------
# Ancillary services
# -----------------------------
PGADMIN_DEFAULT_EMAIL=admin@admin.com
PGADMIN_DEFAULT_PASSWORD=admin
PGADMIN_PORT=80
BACKEND_PORT=8080
